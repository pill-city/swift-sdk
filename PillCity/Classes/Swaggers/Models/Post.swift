//
// Post.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct Post: Codable {

    /** Permanent ID for the post */
    public var _id: String
    /** In epoch seconds, when the post was created */
    public var createdAtSeconds: Decimal
    public var author: User
    /** Text content for the post */
    public var content: String?
    /** Whether the post is publicly accessible on the server */
    public var isPublic: Bool
    /** Whether the post is publicly reshareable on the server */
    public var reshareable: Bool?
    public var resharedFrom: AllOfPostResharedFrom?
    /** URLs for the post&#x27;s media */
    public var mediaUrls: [String]?
    /** Reactions for the post */
    public var reactions: [Reaction]?
    /** Comments for the post */
    public var comments: [Comment]?
    /** Circles that the post is published in */
    public var circles: [Circle]?
    /** Whether the post is deleted */
    public var deleted: Bool?
    /** Whether the post is an update avatar post */
    public var isUpdateAvatar: Bool?
    public var poll: AllOfPostPoll?

    public init(_id: String, createdAtSeconds: Decimal, author: User, content: String? = nil, isPublic: Bool, reshareable: Bool? = nil, resharedFrom: AllOfPostResharedFrom? = nil, mediaUrls: [String]? = nil, reactions: [Reaction]? = nil, comments: [Comment]? = nil, circles: [Circle]? = nil, deleted: Bool? = nil, isUpdateAvatar: Bool? = nil, poll: AllOfPostPoll? = nil) {
        self._id = _id
        self.createdAtSeconds = createdAtSeconds
        self.author = author
        self.content = content
        self.isPublic = isPublic
        self.reshareable = reshareable
        self.resharedFrom = resharedFrom
        self.mediaUrls = mediaUrls
        self.reactions = reactions
        self.comments = comments
        self.circles = circles
        self.deleted = deleted
        self.isUpdateAvatar = isUpdateAvatar
        self.poll = poll
    }

    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case createdAtSeconds = "created_at_seconds"
        case author
        case content
        case isPublic = "is_public"
        case reshareable
        case resharedFrom = "reshared_from"
        case mediaUrls = "media_urls"
        case reactions
        case comments
        case circles
        case deleted
        case isUpdateAvatar = "is_update_avatar"
        case poll
    }

}
